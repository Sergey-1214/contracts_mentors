syntax = "proto3";

package user.v1;

option go_package = "github.com/Sergey-1214/contracts_mentors/user/v1;userv1";

service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc UploadAvatar(UploadAvatarRequest) returns (UploadAvatarResponse);
    rpc DeleteAvatar(DeleteAvatarRequest) returns (DeleteAvatarResponse);
}

message User {
    string user_id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string avatar_url = 5; 
}

message CreateUserRequest {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
}

message CreateUserResponse {
    string user_id = 1;
}

message GetUserByIdRequest {
    string user_id = 1;
}

message GetUserByIdResponse {
    User user = 1;
}

message UpdateUserRequest {
    string user_id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    optional string email = 4;
    optional string avatar_url = 5; 
}

message UpdateUserResponse {
    bool success = 1;
}

message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    bool success = 1;
}

message UploadAvatarRequest {
    string user_id = 1;
    bytes image_data = 2;           // бинарные данные изображения
    string file_name = 3;  
    string content_type = 4;        // "image/jpeg", "image/png", и другие
}

message UploadAvatarResponse {
    string avatar_url = 1;
}

message DeleteAvatarRequest {
    string user_id = 1;
}

message DeleteAvatarResponse {
    bool success = 1;
}
